Script started on Thu 17 Nov 2016 11:39:52 AM EST
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ cat mylist.h
/* mylist.h declares functions that extend the STL list.
 *
 * Begun by: Dr. Jump, CS 315 at King's College
 * Completed by: Robert Lowman
 * Date: 11/17/2016
 */

#include <list>           // list<>
using namespace std;

void print(const list<int> &, ostream &);
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ cat mylist.h[Kcpp 
/* mylist.cpp defines functions that extend the STL list.
 *
 * Begun by: Dr. Jump, CS 315 at King's College
 * Completed by: Robert Lowman
 * Date: 11/17/2016
 */

#include <iostream>     // cout, <<
#include <algorithm>
using namespace std;

#include "mylist.h"

/*********************************************
 * print() displays an STL list of integers. *
 * Receive: aList, a list of integers,       *
 *          out, an ostream.                 *
 * Output: the values in aList, to out.      *
 *********************************************/
void print(const list<int> & aList, ostream & out)
{
  list<int>::const_iterator it = aList.begin();
  while (it != aList.end())
  {
    out << *it << '\t';
    it++;
  }
}
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ cat mylist.cpp [1P[1P[1P[1P[1P[1@a[1@x
/* max.cpp finds the maximum value in a C++ linked list.
 *
 * Begun by: Dr. Jump, CS 315 at King's College
 * Completed by: Robert Lowman
 * Date: 11/17/2016
 */

#include <iostream> // cin, cout, <<, >>
#include <algorithm>
using namespace std;

#include "mylist.h"       // print()

int main() {
  // define list1, list2, list3 ...
  list<int> list1;
  list<int> list2;
  list<int> list3;

  list1.push_back(99);    // 99, 88, 77, 66, 55
  list1.push_back(88);    // max is first
  list1.push_back(77);
  list1.push_back(66);
  list1.push_back(55);

  list2.push_back(55);    // 55, 66, 77, 88, 99
  list2.push_back(66);    // max is last
  list2.push_back(77);
  list2.push_back(88);
  list2.push_back(99);

  list3.push_back(55);    // 55, 77, 99, 88, 66
  list3.push_back(77);    // max is in the middle
  list3.push_back(99);
  list3.push_back(88);
  list3.push_back(66);

  print(list1, cout); cout << endl;
  print(list2, cout); cout << endl;
  print(list3, cout); cout << endl;

  // display maxima of the 3 lists...
  cout << "List #1 Maximum: ";
  cout << *max_element(list1.begin(), list1.end()) << endl;
  cout << "List #2 Maximum: ";
  cout << *max_element(list2.begin(), list2.end()) << endl;
  cout << "List #3 Maximum: ";
  cout << *max_element(list3.begin(), list3.end()) << endl;
}
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ make
g++ -c -g -Wall max.cpp -o cppmax.o
g++ -c -g -Wall mylist.cpp
g++ cppmax.o mylist.o  -Wall -g -o cppMax
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ ./x[KcppMax 
99	88	77	66	55	
55	66	77	88	99	
55	77	99	88	66	
List #1 Maximum: 99
List #2 Maximum: 99
List #3 Maximum: 99
]0;guest-qnd4ua@ad425-linux21: ~/CS315-F16-LowmanRobert/unit10-lab/cpp[01;32mguest-qnd4ua@ad425-linux21[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/cpp[00m$ exit

Script done on Thu 17 Nov 2016 11:40:18 AM EST
