Script started on Fri 18 Nov 2016 10:36:44 AM EST
]0;csadmin@csadmin-VirtualBox: ~/CS315-F16-LowmanRobert/unit10-lab/scheme[01;32mcsadmin@csadmin-VirtualBox[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/scheme[00m$ cat  max.scm
;;; max.el searches a list for its maximum value.
;;;
;;; Begun by: Dr. Jump, CS 315 at King's College
;;; Completed by: Robert Lowman
;;; Date: 11/17/2016

(load "./mylist.scm")

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; test function Max. ;;
;;;;;;;;;;;;;;;;;;;;;;;;;
(begin
  (let ((listOne (list 99 88 77 66 55))
        (listTwo (list 55 66 77 88 99))
        (listThree (list 55 77 99 88 66)))
    (display listOne)
    (display "\n")
    (display listTwo)
    (display "\n")
    (display listThree)
    (display "\n")

    (display "the max in listOne is ")
    (display (max listOne))
    (display "\n")

    (display "the max in listTwo is ")
    (display (max listTwo))
    (display "\n")

    (display "the max in listThree is ")
    (display (max listThree))
    (display "\n")

    (quit)))
]0;csadmin@csadmin-VirtualBox: ~/CS315-F16-LowmanRobert/unit10-lab/scheme[01;32mcsadmin@csadmin-VirtualBox[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/scheme[00m$ cat mmax.scm[1P.scm[C[C[1P.scm[Cy.scm[C[Cl.scmi.scms.scmt.scm
;;; mylist.el is a "module" of list operations.
;;;
;;; Begun by: Dr. Jump, CS 315 at King's College
;;; Completed by: Robert Lowman
;;; Date: 11/17/2016

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; MaxOfTwo finds the maximum of two values.       ;;
;;; Receive: val1, val2, two values.            ;;
;;; PRE: val1 and val2 can be compared using <. ;;
;;; Return: the maximum of val1 and val2.       ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define (MaxOfTwo val1 val2)
  (if (> val1 val2)
      val1 val2))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Max finds the maximum value in a list.         ;;
;;; Receive: aList, a list of values.              ;;
;;; PRE: values in aList can be compared using <.  ;;
;;; Return: the maximum value in aList.            ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define (Max aList)
  (if (list? aList)
    (if (eqv? (length aList) 1)
      (car aList)
      (MaxOfTwo (car aList) (Max (cdr aList))))
  ))
]0;csadmin@csadmin-VirtualBox: ~/CS315-F16-LowmanRobert/unit10-lab/scheme[01;32mcsadmin@csadmin-VirtualBox[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/scheme[00m$ scm  max.scm 
(99 88 77 66 55)
(55 66 77 88 99)
(55 77 99 88 66)
the max in listOne is 99
the max in listTwo is 99
the max in listThree is 99
]0;csadmin@csadmin-VirtualBox: ~/CS315-F16-LowmanRobert/unit10-lab/scheme[01;32mcsadmin@csadmin-VirtualBox[00m:[01;34m~/CS315-F16-LowmanRobert/unit10-lab/scheme[00m$ exit

Script done on Fri 18 Nov 2016 10:37:05 AM EST
